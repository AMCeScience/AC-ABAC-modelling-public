# Generated by Django 2.2.1 on 2021-03-11 10:55

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.PositiveSmallIntegerField(choices=[(1, 'patient'), (2, 'ambulance'), (3, 'call_centre'), (4, 'hospital'), (5, 'org_admin')], default=1, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Care_Team',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.IntegerField(null=True, unique=True)),
                ('care_team_name', models.CharField(max_length=100, null=True)),
                ('care_team_tag', models.CharField(default='', max_length=100, null=True)),
                ('care_team_is_active', models.BooleanField(null=True)),
                ('care_team_category', models.CharField(max_length=100, null=True)),
                ('care_team_start_datetime', models.DateTimeField(null=True)),
                ('care_team_end_datetime', models.DateTimeField(null=True)),
                ('care_team_reason_code', models.IntegerField(null=True)),
                ('care_team_telecom', models.IntegerField(null=True)),
                ('care_team_note', models.CharField(max_length=200, null=True)),
                ('care_team_current_location', models.CharField(max_length=200, null=True)),
                ('care_team_time_to_revoke', models.IntegerField(default=30, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Encounter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.IntegerField(null=True, unique=True)),
                ('encounter_identifier', models.IntegerField(null=True, unique=True)),
                ('encounter_start_datetime', models.DateTimeField(null=True)),
                ('encounter_end_datetime', models.DateTimeField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.IntegerField(null=True, unique=True)),
                ('organization_active', models.BooleanField(null=True)),
                ('organization_type', models.PositiveSmallIntegerField(choices=[(1, 'Unspecified'), (2, 'Ambulance Service'), (3, 'Call Centre Service'), (4, 'Hospital Service')], default=1, null=True)),
                ('organization_name', models.CharField(max_length=100, null=True)),
                ('organization_alias', models.CharField(max_length=100, null=True)),
                ('organization_telecom', models.IntegerField(null=True)),
                ('organization_zipcode', models.CharField(max_length=100, null=True)),
                ('organization_address', models.CharField(max_length=100, null=True)),
                ('organization_country', models.CharField(max_length=100, null=True)),
                ('organization_city', models.CharField(max_length=100, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Episode_Of_Care',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('episode_of_care_service', models.PositiveSmallIntegerField(choices=[(1, 'call_centre'), (2, 'ambulance'), (3, 'hospital')], default=1, null=True)),
                ('episode_of_care_encounter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pip_attr_provider.Encounter')),
                ('episode_of_care_team', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='pip_attr_provider.Care_Team')),
            ],
        ),
        migrations.AddField(
            model_name='encounter',
            name='encounter_org_finisher',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='++', to='pip_attr_provider.Organization'),
        ),
        migrations.AddField(
            model_name='encounter',
            name='encounter_org_starter',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='pip_attr_provider.Organization'),
        ),
        migrations.AddField(
            model_name='encounter',
            name='encounter_patient',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='encounter',
            name='encounter_starter',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Care_Team_Participants',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('participant_role', models.CharField(max_length=100, null=True)),
                ('care_team_responsible', models.BooleanField(null=True)),
                ('participating', models.BooleanField(null=True)),
                ('added_date', models.DateTimeField(null=True)),
                ('care_team_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='care', to='pip_attr_provider.Care_Team')),
                ('participant_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='care_team',
            name='care_team_organization',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='pip_attr_provider.Organization'),
        ),
    ]
